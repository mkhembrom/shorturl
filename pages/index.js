import { CopyIcon, Icon, LinkIcon, SmallCloseIcon } from '@chakra-ui/icons'
import { Box, Flex, FormControl, IconButton, Input, InputGroup, InputLeftElement, InputRightElement, Link, Text } from '@chakra-ui/react'
import Head from 'next/head'
import { useState } from 'react'
import useUrlStore from '../components/store/urlStore'
import axios from 'axios';
import { FiExternalLink } from 'react-icons/fi';

export default function Home() {

  const [text, setText] = useState("");
  const [textCopy, setTextCopy] = useState("");
  const [tcopy, setTCopy] = useState(false);
  const handleClick = () => setText('');
  const [data, setData] = useState('');
  const urlChange = useUrlStore(state => state.onUrlChange);
  const url = useUrlStore(state => state.urlText);

  function isUrlValid(userInput) {
    var res = userInput.match(/(http(s)?:\/\/.)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/g);
      if(res == null)
          return false;
      else
          return true;
  }

  const handleChange = (e) => {
    setText(e.target.value);

    urlChange(e.target.value);
  }

  const handleSubmit = async (e) => {
    e.preventDefault()
  
    
    if(isUrlValid(url)) {
     try {
      const config = {
        method: "post",
        url: '/api/addlink',
        headers: {
          "Content-Type": "application/json"
        },
        data: { link: url }
      }

      const res = await axios(config);
      console.log(res.data);
      setData(res.data);
      setTextCopy(res.data);
    
     } catch (err) {
      console.log(err.message);
     }
    } else {
      alert("Please enter the valid url")
    }

    // setText('');

  }

  const handleCopyClick = () => {

    // Copy the text inside the text field
    navigator.clipboard.writeText(textCopy);
    setTCopy(true);

    setTimeout(()=>{
      setTCopy(false);
    }, 2000);

    // Alert the copied text
    // alert("Copied the text: " + textCopy);

  }
  

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
       
       <Flex alignItems="center" justifyContent="center" h="100vh" w={["90%","500px"]} mx="auto" boxDhadow="rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;">
          <Flex  alignItems="center" justifyContent="center" flexDirection="column" w="100%" p={["5","10"]} mx="auto"  borderRadius="5px" backgroundColor="rgba(255,255,255,0.5)">
        <Text fontSize="4xl" color="#000" mb={["5","10"]}>URL shortened</Text>
        <form onSubmit={handleSubmit}>
        <FormControl >

        <InputGroup mx="auto" w={["100%","400px"]}>
           <InputLeftElement>
            <LinkIcon color="green.600" />
           </InputLeftElement>
          <Input w={["100%","400px"]} autoComplete='off' backgroundColor="blue.50" letterSpacing='1.4px' color="black.800" variant='outline' placeholder='Your URL' value={text} onChange={handleChange} />
            <InputRightElement>
          <IconButton
            backgroundColor="transparent"
            _hover={{ backgroundColor: 'none', transform: 'scale(1.3)', transition: '0.33s' }}
            _active={{ backgroundColor: 'none' }}
            colorScheme='teal'
            aria-label='Send email'
            icon={text != "" ? <SmallCloseIcon color="black" /> : "" }
            onClick={handleClick}
          />
        
      </InputRightElement>
        </InputGroup>
        </FormControl>

        </form>
        { data ? (
          <Box position="relative" w="100%">
          <InputGroup  mt="3" mx="auto" w={["100%","400px"]}>
            <InputLeftElement>
              <Icon color="blue.800" as={FiExternalLink} />
            </InputLeftElement>
           <InputRightElement  p="5"
              pr="3">
              <IconButton
                color="gray.600"
                backgroundColor="transparent"
                _hover={{ backgroundColor: "transparent" }}
                _active={{ backgroundColor: "transparent" }}
                icon={<CopyIcon />}
                onClick={handleCopyClick}
              />
              </InputRightElement>
            <Link px="10"w={["100%","400px"]} to={`/${data}`} target="_blank" bg="blue.50" color="blue.400" py="2" borderRadius="5" 
           >{`https://shorturl/${data}`}</Link>
            
             
          </InputGroup>

<Flex position="absolute" bottom="-6" right="0" alignContent="flex-end" justifyContent="flex-end">
{ tcopy ? (
  <Text mt="2" color="#000" fontSize="sm">Copied!</Text>
) : ( <Text></Text> )}
</Flex>
</Box>
          
          
        ) : ( '' ) }
  
  
          </Flex>
       </Flex>
      
       
    
      
      </main>

      <style jsx>{`

        a{
          color: blue;
        }
        main{
          background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);
	background-size: 400% 400%;
	animation: gradient 15s ease infinite;
	height: 100%;
  width: 100%;
        }  


@keyframes gradient {
	0% {
		background-position: 0% 50%;
	}
	50% {
		background-position: 100% 50%;
	}
	100% {
		background-position: 0% 50%;
	}
}
      `}</style>
     
    </div>
  )
}
